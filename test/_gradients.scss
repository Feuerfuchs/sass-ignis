// sass-lint:disable no-color-literals zero-unit

@include describe('Gradients') {
    @include it('ig-easing-gradient') {
        $gradient1: ig-easing-gradient(
            linear,
            to right,
            #000,
            in-quad,
            transparent
        );

        $expected1: linear-gradient(
            to right,
            #000 0,
            mix(transparent, #000, ig-ease-in-quad(0.25) * 100%) 25%,
            mix(transparent, #000, ig-ease-in-quad(0.5)  * 100%) 50%,
            mix(transparent, #000, ig-ease-in-quad(0.75) * 100%) 75%,
            mix(transparent, #000, ig-ease-in-quad(1)    * 100%) 100%
        );

        @include assert-equal($gradient1, $expected1, 'Simple linear gradient');

        // ---------------------------------------------------------------------------

        $gradient2: ig-easing-gradient(
            radial,
            1em 2em at 50% 60%,
            #000,
            out-cubic,
            transparent
        );

        $expected2: radial-gradient(
            1em 2em at 50% 60%,
            #000 0,
            mix(transparent, #000, ig-ease-out-cubic(0.25) * 100%) 25%,
            mix(transparent, #000, ig-ease-out-cubic(0.5)  * 100%) 50%,
            mix(transparent, #000, ig-ease-out-cubic(0.75) * 100%) 75%,
            mix(transparent, #000, ig-ease-out-cubic(1)    * 100%) 100%
        );

        @include assert-equal($gradient2, $expected2, 'Simple radial gradient');

        // ---------------------------------------------------------------------------

        $gradient3: ig-easing-gradient(
            linear,
            to right,
            #000        2em,
            in-quad,
            transparent 10em
        );

        $expected3: linear-gradient(
            to right,
            #000 2em,
            mix(transparent, #000, ig-ease-in-quad(0.25) * 100%) 4em,
            mix(transparent, #000, ig-ease-in-quad(0.5)  * 100%) 6em,
            mix(transparent, #000, ig-ease-in-quad(0.75) * 100%) 8em,
            mix(transparent, #000, ig-ease-in-quad(1)    * 100%) 10em
        );

        @include assert-equal($gradient3, $expected3, 'Linear gradient with positioned color stops');

        // ---------------------------------------------------------------------------

        $gradient4: ig-easing-gradient(
            linear,
            to right,
            #000 20%,
            in-quad,
            transparent calc(20% + 10em)
        );

        $expected4: linear-gradient(
            to right,
            #000 20%,
            mix(transparent, #000, ig-ease-in-quad(0.25) * 100%) calc(20% + (20% + 10em - 20%) * 0.25),
            mix(transparent, #000, ig-ease-in-quad(0.5)  * 100%) calc(20% + (20% + 10em - 20%) * 0.5),
            mix(transparent, #000, ig-ease-in-quad(0.75) * 100%) calc(20% + (20% + 10em - 20%) * 0.75),
            mix(transparent, #000, ig-ease-in-quad(1)    * 100%) calc(20% + 10em)
        );

        @include assert-equal($gradient4, $expected4, 'More advanced linear gradient with positioned color stops');

        // ---------------------------------------------------------------------------

        $gradient5: ig-easing-gradient(
            linear,
            to right,
            #000        2em,
            #f00        7em,
            in-quad,
            transparent 10em
        );

        $expected5: linear-gradient(
            to right,
            #000 2em,
            #f00 7em,
            mix(transparent, #f00, ig-ease-in-quad(0.25) * 100%) 7em + 3em * 0.25,
            mix(transparent, #f00, ig-ease-in-quad(0.5)  * 100%) 7em + 3em * 0.5,
            mix(transparent, #f00, ig-ease-in-quad(0.75) * 100%) 7em + 3em * 0.75,
            mix(transparent, #f00, ig-ease-in-quad(1)    * 100%) 10em
        );

        @include assert-equal($gradient5, $expected5, 'Linear gradient with 3 positioned color stops, 1 easing transitions');

        // ---------------------------------------------------------------------------

        $gradient6: ig-easing-gradient(
            linear,
            to right,
            #000        2em,
            in-quad,
            #f00        7em,
            in-quad,
            transparent 10em
        );

        $expected6: linear-gradient(
            to right,
            #000 2em,
            mix(#f00,        #000, ig-ease-in-quad(0.25) * 100%) 2em + 5em * 0.25,
            mix(#f00,        #000, ig-ease-in-quad(0.5)  * 100%) 2em + 5em * 0.5,
            mix(#f00,        #000, ig-ease-in-quad(0.75) * 100%) 2em + 5em * 0.75,
            #f00 7em,
            mix(transparent, #f00, ig-ease-in-quad(0.25) * 100%) 7em + 3em * 0.25,
            mix(transparent, #f00, ig-ease-in-quad(0.5)  * 100%) 7em + 3em * 0.5,
            mix(transparent, #f00, ig-ease-in-quad(0.75) * 100%) 7em + 3em * 0.75,
            mix(transparent, #f00, ig-ease-in-quad(1)    * 100%) 10em
        );

        @include assert-equal($gradient6, $expected6, 'Linear gradient with 3 positioned color stops, 2 easing transitions');

        // ---------------------------------------------------------------------------

        $gradient7: ig-easing-gradient(
            linear,
            to right,
            #000        2em,
            in-quad,
            #f00,
            in-quad,
            transparent 10em
        );

        $expected7: linear-gradient(
            to right,
            #000 2em,
            mix(#f00,        #000, ig-ease-in-quad(0.25) * 100%) 2em + 4em * 0.25,
            mix(#f00,        #000, ig-ease-in-quad(0.5)  * 100%) 2em + 4em * 0.5,
            mix(#f00,        #000, ig-ease-in-quad(0.75) * 100%) 2em + 4em * 0.75,
            #f00 6em,
            mix(transparent, #f00, ig-ease-in-quad(0.25) * 100%) 6em + 4em * 0.25,
            mix(transparent, #f00, ig-ease-in-quad(0.5)  * 100%) 6em + 4em * 0.5,
            mix(transparent, #f00, ig-ease-in-quad(0.75) * 100%) 6em + 4em * 0.75,
            mix(transparent, #f00, ig-ease-in-quad(1)    * 100%) 10em
        );

        @include assert-equal($gradient7, $expected7, 'Linear gradient with 2 / 3 positioned color stops, 2 easing transitions');

        // ---------------------------------------------------------------------------

        $gradient8: ig-easing-gradient(
            linear,
            to right,
            #000,
            in-quad,
            #f00,
            in-quad,
            transparent
        );

        $expected8: linear-gradient(
            to right,
            #000 0,
            mix(#f00,        #000, ig-ease-in-quad(0.25) * 100%) 50% * 0.25,
            mix(#f00,        #000, ig-ease-in-quad(0.5)  * 100%) 50% * 0.5,
            mix(#f00,        #000, ig-ease-in-quad(0.75) * 100%) 50% * 0.75,
            #f00 50%,
            mix(transparent, #f00, ig-ease-in-quad(0.25) * 100%) 50% + 50% * 0.25,
            mix(transparent, #f00, ig-ease-in-quad(0.5)  * 100%) 50% + 50% * 0.5,
            mix(transparent, #f00, ig-ease-in-quad(0.75) * 100%) 50% + 50% * 0.75,
            mix(transparent, #f00, ig-ease-in-quad(1)    * 100%) 100%
        );

        @include assert-equal($gradient8, $expected8, 'Linear gradient with 0 / 3 positioned color stops, 2 easing transitions');

        // ---------------------------------------------------------------------------

        $gradient9: ig-easing-gradient(
            linear,
            to right,
            #000,
            in-quad,
            #f00,
            in-quad,
            transparent 20em
        );

        $expected9: linear-gradient(
            to right,
            #000 0,
            mix(#f00,        #000, ig-ease-in-quad(0.25) * 100%) 10em * 0.25,
            mix(#f00,        #000, ig-ease-in-quad(0.5)  * 100%) 10em * 0.5,
            mix(#f00,        #000, ig-ease-in-quad(0.75) * 100%) 10em * 0.75,
            #f00 10em,
            mix(transparent, #f00, ig-ease-in-quad(0.25) * 100%) 10em + 10em * 0.25,
            mix(transparent, #f00, ig-ease-in-quad(0.5)  * 100%) 10em + 10em * 0.5,
            mix(transparent, #f00, ig-ease-in-quad(0.75) * 100%) 10em + 10em * 0.75,
            mix(transparent, #f00, ig-ease-in-quad(1)    * 100%) 20em
        );

        @include assert-equal($gradient9, $expected9, 'Linear gradient with 1 / 3 positioned color stops, 2 easing transitions');

        // ---------------------------------------------------------------------------

        $gradient10: ig-easing-gradient(
            linear,
            to right,
            #000,
            cubic-bezier 0.47 0 0.745 0.715,
            transparent
        );

        $expected10: linear-gradient(
            to right,
            #000 0,
            mix(transparent, #000, ig-cubic-bezier(0.47, 0, 0.745, 0.715, 0.25) * 100%) 25%,
            mix(transparent, #000, ig-cubic-bezier(0.47, 0, 0.745, 0.715, 0.5)  * 100%) 50%,
            mix(transparent, #000, ig-cubic-bezier(0.47, 0, 0.745, 0.715, 0.75) * 100%) 75%,
            mix(transparent, #000, ig-cubic-bezier(0.47, 0, 0.745, 0.715, 1)    * 100%) 100%
        );

        @include assert-equal($gradient10, $expected10, 'Simple linear gradient with custom easing');
    }
}
